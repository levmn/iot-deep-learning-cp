# -*- coding: utf-8 -*-
"""1tdspx-iot-cp-02-parte-02.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11I2kQKid5kxgRX5Gsuuax7lzZEOB-Uu5

### [2TDSPX] DISRUPTIVE ARCHITECTURES: IOT, IOB E GENERATIVE AI

> * RM558948 - Allan Brito Moreira
> * RM558868 Caio Liang
> * RM98276 - Levi Magni

#### Checkpoint 02 - Visão Computacional
Treinar e demonstrar modelos de Visão Computacional, aplicando duas ferramentas diferentes.
<br>
O foco é explorar e comparar técnicas de detecção, classificação ou rastreamento de imagens e vídeos, utilizando modelos pré-treinados ou criados.

<br>

**Links de referência:**

*   Introdução ao OpenCV e Detecção Facial:
    *   https://github.com/prof-atritiack/vision-opencv-basics
* YOLOv8:
    * https://github.com/prof-atritiack/visao-computacional-yolov8
* Modelos do Hugging Face:
    * https://github.com/prof-atritiack/visao-computacional-huggingface

### Configurações iniciais
"""

# Instalação de dependências
!pip install ultralytics roboflow opencv-python matplotlib

"""### Ferramenta 1: Roboflow"""

from roboflow import Roboflow

rf = Roboflow(api_key="ktdKhSPGgPV2wBA8TRCa")
project = rf.workspace("computervision-wi7w2").project("mushroom-utqhe")
version = project.version(1)
dataset = version.download("yolov8")

from ultralytics import YOLO

model = YOLO("yolov8n.pt")

model.train(
    data=dataset.location + "/data.yaml",
    epochs=10,
    imgsz=310,
    batch=8,
    name="mushroom_yolo_model"
)

model.val()

import cv2
from google.colab.patches import cv2_imshow

results = model.predict("/content/mush00.jpg", conf=0.2)
cv2_imshow(results[0].plot())